{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"console log": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "cl",
		"body": ["console.log($1);"],
		"description": "Log output to console"
	},

	"console log with label": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "cll",
		"body": ["console.log('$1', $2);"],
		"description": "Log output with label to console"
	},

	"console log as object": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "clo",
		"body": ["console.log({$1});"],
		"description": "Log output as object to console"
	},

	"debugger": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
		"prefix": "db",
		"body": ["debugger;"],
		"description": "Programmatically add a breakpoint"
	},

	"export": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "exp",
    "body": [
        "export {$2} from '$1';$0"
    ],
    "description": "Export statement"
	},

	"import": {
		"scope": "javascript,javascriptreact,typescript,typescriptreact",
    "prefix": "imp",
    "body": [
        "import {$2} from '$1';$0"
    ],
    "description": "Import statement"
	},

	
}
